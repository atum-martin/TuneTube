language: android
# safelist
branches:
  #only:
  #- master
  except:
    - /^.*dev_branch$/
env:
  global:
    - COMPILE_SDK_VERSION=28 # Same as `compileSdkVersion` in build.gradle
    - EMULATOR_API=22
    - BUILD_TOOLS_VERSION=28.0.2 # Same as `buildToolsVersion` in build.gradle
    - ABI=armeabi-v7a # ARM ABI v7a by default
    - ADB_INSTALL_TIMEOUT=5 # minutes
android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    # - tools
    # - platform-tools
    - tools # Update android-sdk (also called android-sdk-tools)
    - platform-tools
    - tools # Write the second time to update to thes newest as described in the document
    - build-tools-${BUILD_TOOLS_VERSION} # For building
    - android-${COMPILE_SDK_VERSION} # For building
    - android-${EMULATOR_API} # For testing

    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository
    - addon-google_apis-google-19

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - sys-img-${ABI}-android-${EMULATOR_API} # Emulator image
before_install:
  - chmod +x gradlew
  - yes | sdkmanager "platforms;android-${COMPILE_SDK_VERSION}"
install:
  - sdkmanager --list || true # Debug / Observation
  - echo yes | sdkmanager "extras;m2repository;com;android;support;constraint;constraint-layout;1.0.2" #&> /dev/null
  - echo yes | sdkmanager "extras;m2repository;com;android;support;constraint;constraint-layout-solver;1.0.2" #&> /dev/null
  - avdmanager --list || true  # Debug / Observation
before_script:
  - echo no | android create avd --force -n test -t android-${EMULATOR_API} --abi ${ABI}
  - emulator -avd test -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &
script:
  #- ./gradlew assembleRelease
  #- ./gradlew :app:createDebugAndroidTestCoverageReport --info --stacktrace

after_success:
  - bash <(curl -s https://codecov.io/bash)
  - wget https://github.com/tcnksm/ghr/releases/download/v0.10.2/ghr_v0.10.2_linux_amd64.tar.gz
  - tar -xf ghr_v0.10.2_linux_amd64.tar.gz
  - chmod +x ghr_v0.10.2_linux_amd64/ghr
  - ghr_v0.10.2_linux_amd64/ghr -u atum-martin -r TuneTube -b "developer_build [ci skip]" -delete -prerelease v0.1.0_dev_branch $TRAVIS_BUILD_DIR/app/build/outputs/apk/debug/app-debug.apk